/Users/kushagrasrivastva/Desktop/ReelShortBlocker/app/build.gradle:31: Warning: Unknown issue id "Deprecation" [UnknownIssueId]
        warning 'Deprecation'
                 ~~~~~~~~~~~

   Explanation for issues of type "UnknownIssueId":
   Lint will report this issue if it is configured with an issue id it does
   not recognize in for example Gradle files or lint.xml configuration files.

/Users/kushagrasrivastva/Desktop/ReelShortBlocker/app/build.gradle:36: Warning: A newer version of androidx.appcompat:appcompat than 1.6.1 is available: 1.7.1 [GradleDependency]
    implementation 'androidx.appcompat:appcompat:1.6.1'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "GradleDependency":
   This detector looks for usages of libraries where the version you are using
   is not the current stable release. Using older versions is fine, and there
   are cases where you deliberately want to stick with an older version.
   However, you may simply not be aware that a more recent version is
   available, and that is what this lint check helps find.

/Users/kushagrasrivastva/Desktop/ReelShortBlocker/app/src/main/res/values/strings.xml:4: Warning: The resource R.string.accessibility_service_description appears to be unused [UnusedResources]
    <string name="accessibility_service_description">Blocks specific app interactions by monitoring accessibility events</string>
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kushagrasrivastva/Desktop/ReelShortBlocker/app/src/main/res/values/strings.xml:5: Warning: The resource R.string.enable_service_button appears to be unused [UnusedResources]
    <string name="enable_service_button">Enable Accessibility Service</string>
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "UnusedResources":
   Unused resources make applications larger and slow down builds.


   The unused resource check can ignore tests. If you want to include
   resources that are only referenced from tests, consider packaging them in a
   test source set instead.

   You can include test sources in the unused resource check by setting the
   system property lint.unused-resources.include-tests =true, and to exclude
   them (usually for performance reasons), use
   lint.unused-resources.exclude-tests =true.
   ,

/Users/kushagrasrivastva/Desktop/ReelShortBlocker/app/src/main/res/mipmap/ic_launcher_round.png: Warning: Launcher icon used as round icon did not have a circular shape [IconLauncherShape]

   Explanation for issues of type "IconLauncherShape":
   According to the Android Design Guide
   (https://material.io/design/iconography/) your launcher icons should "use a
   distinct silhouette", a "three-dimensional, front view, with a slight
   perspective as if viewed from above, so that users perceive some depth."

   The unique silhouette implies that your launcher icon should not be a
   filled square.

/Users/kushagrasrivastva/Desktop/ReelShortBlocker/app/src/main/res/mipmap/ic_launcher_round.png: Warning: The following unrelated icon files have identical contents: ic_launcher.png, ic_launcher_round.png [IconDuplicates]

   Explanation for issues of type "IconDuplicates":
   If an icon is repeated under different names, you can consolidate and just
   use one of the icons and delete the others to make your application
   smaller. However, duplicated icons usually are not intentional and can
   sometimes point to icons that were accidentally overwritten or accidentally
   not updated.

/Users/kushagrasrivastva/Desktop/ReelShortBlocker/app/src/main/java/com/example/reelshortblocker/MainActivity.java:47: Warning: String literal in setText can not be translated. Use Android resources instead. [SetTextI18n]
            statusText.setText("Service is Active");
                               ~~~~~~~~~~~~~~~~~~~
/Users/kushagrasrivastva/Desktop/ReelShortBlocker/app/src/main/java/com/example/reelshortblocker/MainActivity.java:48: Warning: String literal in setText can not be translated. Use Android resources instead. [SetTextI18n]
            settingsButton.setText("Disable Service (in Settings)");
                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kushagrasrivastva/Desktop/ReelShortBlocker/app/src/main/java/com/example/reelshortblocker/MainActivity.java:51: Warning: String literal in setText can not be translated. Use Android resources instead. [SetTextI18n]
            statusText.setText("Service is Inactive. Please enable it.");
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kushagrasrivastva/Desktop/ReelShortBlocker/app/src/main/java/com/example/reelshortblocker/MainActivity.java:52: Warning: String literal in setText can not be translated. Use Android resources instead. [SetTextI18n]
            settingsButton.setText("Open Accessibility Settings");
                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "SetTextI18n":
   When calling TextView#setText
   * Never call Number#toString() to format numbers; it will not handle
   fraction separators and locale-specific digits properly. Consider using
   String#format with proper format specifications (%d or %f) instead.
   * Do not pass a string literal (e.g. "Hello") to display text. Hardcoded
   text can not be properly translated to other languages. Consider using
   Android resource strings instead.
   * Do not build messages by concatenating text chunks. Such messages can not
   be properly translated.

   https://developer.android.com/guide/topics/resources/localization.html

/Users/kushagrasrivastva/Desktop/ReelShortBlocker/app/src/main/res/layout/activity_main.xml:16: Warning: Hardcoded string "Checking service status...", should use @string resource [HardcodedText]
        android:text="Checking service status..."
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kushagrasrivastva/Desktop/ReelShortBlocker/app/src/main/res/layout/activity_main.xml:24: Warning: Hardcoded string "Open Accessibility Settings", should use @string resource [HardcodedText]
        android:text="Open Accessibility Settings" />
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "HardcodedText":
   Hardcoding text attributes directly in layout files is bad for several
   reasons:

   * When creating configuration variations (for example for landscape or
   portrait) you have to repeat the actual text (and keep it up to date when
   making changes)

   * The application cannot be translated to other languages by just adding
   new translations for existing string resources.

   There are quickfixes to automatically extract this hardcoded string into a
   resource lookup.

0 errors, 12 warnings
